{
	"name": "UpdateCustomerDimension",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerSource",
						"type": "DatasetReference"
					},
					"name": "SourceDb"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CreateCustomerHash"
				},
				{
					"name": "exists1"
				},
				{
					"name": "LookupCustomerID"
				},
				{
					"name": "SetDates",
					"description": "Creating/updating the columns 'CustomerID, Title, FairstName, MiddleName, LastName, Suffix, CompanyName, SalesPerson, EmailAddress, Phone, InsertedDate, ModifiedDate, HashKey, hashKey, CustomerID, Title, FirstName, MiddleName, LastName, Suffix, CompanyName, SalesPerson, EmailAddress, Phone, InsertedDate, ModifiedDate, HashKey'"
				},
				{
					"name": "AllowUpserts"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> SourceDb",
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> DimCustomer",
				"SourceDb derive(hashKey = sha2(256, iifNull(Title,'') +FirstName +iifNull(MiddleName,'') +LastName +iifNull(Suffix,'') +iifNull(CompanyName,'') +iifNull(SalesPerson,'') +iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> CreateCustomerHash",
				"CreateCustomerHash, DimCustomer exists(CreateCustomerHash@hashKey == DimCustomer@HashKey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1, DimCustomer lookup(SourceDb@CustomerID == DimCustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCustomerID",
				"LookupCustomerID derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),",
				"          ModifiedDate = currentTimestamp()) ~> SetDates",
				"SetDates alterRow(upsertIf(true())) ~> AllowUpserts",
				"AllowUpserts sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CustomerID'],",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID = SourceDb@CustomerID,",
				"          Title = SourceDb@Title,",
				"          FirstName = SourceDb@FirstName,",
				"          MiddleName = SourceDb@MiddleName,",
				"          LastName = SourceDb@LastName,",
				"          Suffix = SourceDb@Suffix,",
				"          CompanyName = SourceDb@CompanyName,",
				"          SalesPerson = SourceDb@SalesPerson,",
				"          EmailAddress = SourceDb@EmailAddress,",
				"          Phone = SourceDb@Phone,",
				"          InsertedDate,",
				"          ModifiedDate,",
				"          HashKey = DimCustomer@HashKey",
				"     )) ~> sink1"
			]
		}
	}
}